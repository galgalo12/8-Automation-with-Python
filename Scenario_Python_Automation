You are a security professional working at a health care company. As part of your job, you're required to regularly update a file that identifies the employees 
who can access restricted content. The contents of the file are based on who is working with personal patient records.
Employees are restricted access based on their IP address. There is an allow list for IP addresses permitted to sign into the restricted subnetwork. 
There's also a remove list that identifies which employees you must remove from this allow list.

Your task is to create an algorithm that uses Python code to check whether the allow list contains any IP addresses identified on the remove list.
If so, you should remove those IP addresses from the file containing the allow list.

  Import and Read the File Contents
  # import the file 
  import_file = "allow_list.txt"
  # Open the file
  with open(import_file, "r") as file: 
      ip_addresses = file.read()
  # display the ip_addresses
  print(ip_addresses)

# There are 17 IP addressess in this String. 
ip_address
192.168.25.60
192.168.205.12
192.168.97.225
192.168.6.9
192.168.52.90
192.168.158.170
192.168.90.124
192.168.186.176
192.168.133.188
192.168.203.198
192.168.201.40
192.168.218.219
192.168.52.37
192.168.156.224
192.168.60.153
192.168.58.57
192.168.69.116

Convert the String into a List
# String into a list
import_file = "allow_list.txt"

# `with`statement to read the contents
with open(import_file, "r") as file: 
    ip_addresses = file.read()

# convert from a string to a list
ip_addresses = ip_addresses.split()

# Display the `ip_addresses`
print(ip_addresses)

# There are 17 IP addressess in this list. 
['ip_address', '192.168.25.60', '192.168.205.12', '192.168.97.225', '192.168.6.9', '192.168.52.90', '192.168.158.170', '192.168.90.124', '192.168.186.176', '192.168.133.188', '192.168.203.198', '192.168.201.40', '192.168.218.219', '192.168.52.37', '192.168.156.224', '192.168.60.153', '192.168.58.57', '192.168.69.116']
Remove IP Addresses That Are on the Remove List
# import the file 
import_file = "allow_list.txt"

# Assign `remove_list` to a list of IP addresses that are no longer allowed to access restricted information. 

remove_list = ["192.168.97.225", "192.168.158.170", "192.168.201.40", "192.168.58.57"]

# `with`statement to read the contents
with open(import_file, "r") as file: 
    ip_addresses = file.read()

# convert from a string to a list
ip_addresses = ip_addresses.split()

# Build iterative statement
# Name loop variable `element`
# Loop through `ip_addresses`

for element in ip_addresses:
  
  # Build conditional statement
  # If current element is in `remove_list`,

    if element in remove_list:

        # then current element should be removed from `ip_addresses`

        ip_addresses.remove(element)

# Display `ip_addresses` 

print(ip_addresses)
['ip_address', '192.168.25.60', '192.168.205.12', '192.168.6.9', '192.168.52.90', '192.168.90.124', '192.168.186.176', '192.168.133.188', '192.168.203.198', '192.168.218.219', '192.168.52.37', '192.168.156.224', '192.168.60.153', '192.168.69.116']
Update the File With the Revised List of IP Addresses
import_file = "allow_list.txt"

remove_list = ["192.168.97.225", "192.168.158.170", "192.168.201.40", "192.168.58.57"]

with open(import_file, "r") as file:

  ip_addresses = file.read()

ip_addresses = ip_addresses.split()

for element in ip_addresses:
   
    if element in remove_list:

        ip_addresses.remove(element)

# Convert `ip_addresses` back to a string so that it can be written into the text file     

ip_addresses = " ".join(ip_addresses)

# Build `with` statement to rewrite the original file

with open(import_file, "w") as file:

  # Rewrite the file, replacing its contents with `ip_addresses`

  file.write(ip_addresses)

# Build `with` statement to read in the updated file

with open(import_file, "r") as file:

    # Read in the updated file and store the contents in `text`

    text = file.read()

# Display the contents of `text`

print(text)
ip_address 192.168.25.60 192.168.205.12 192.168.6.9 192.168.52.90 192.168.90.124 192.168.186.176 192.168.133.188 192.168.203.198 192.168.218.219 192.168.52.37 192.168.156.224 192.168.60.153 192.168.69.116
